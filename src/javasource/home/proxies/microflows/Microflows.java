// This file was generated by Mendix Modeler 7.23.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package home.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Home module
	public static void act_SendToURL_Send(IContext context, home.proxies.SendToURL _sendToURL)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SendToURL", _sendToURL == null ? null : _sendToURL.getMendixObject());
			Core.execute(context, "Home.Act_SendToURL_Send", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean afterStartup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Home.AfterStartup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static discordmessage.proxies.Message dS_TestMessage_UnpackMessage(IContext context, home.proxies.TestMessage _testMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestMessage", _testMessage == null ? null : _testMessage.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "Home.DS_TestMessage_UnpackMessage", params);
			return result == null ? null : discordmessage.proxies.Message.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TestMessage_NewByKey(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Home.IVK_TestMessage_NewByKey", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TestMessage_NewByURL(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Home.IVK_TestMessage_NewByURL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TestMessage_Save(IContext context, home.proxies.TestMessage _testMessage, discordmessage.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestMessage", _testMessage == null ? null : _testMessage.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Home.IVK_TestMessage_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void iVK_TestMessage_SaveAndSend(IContext context, home.proxies.TestMessage _testMessage, discordmessage.proxies.Message _message)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TestMessage", _testMessage == null ? null : _testMessage.getMendixObject());
			params.put("Message", _message == null ? null : _message.getMendixObject());
			Core.execute(context, "Home.IVK_TestMessage_SaveAndSend", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}